<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Tales from Chiba</title>
    <link>https://mickhardins.github.io/talesfromchiba/post/</link>
      <atom:link href="https://mickhardins.github.io/talesfromchiba/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 16 Sep 2019 18:13:47 +0200</lastBuildDate>
    <image>
      <url>https://mickhardins.github.io/talesfromchiba/img/icon-192.png</url>
      <title>Posts</title>
      <link>https://mickhardins.github.io/talesfromchiba/post/</link>
    </image>
    
    <item>
      <title>D3.js chart embedding</title>
      <link>https://mickhardins.github.io/talesfromchiba/post/d3js-embedding/</link>
      <pubDate>Mon, 16 Sep 2019 18:13:47 +0200</pubDate>
      <guid>https://mickhardins.github.io/talesfromchiba/post/d3js-embedding/</guid>
      <description>&lt;p&gt;This is a simple post to see if it&amp;rsquo;s possible to embed d3.js chart easily with Hugo.&lt;/p&gt;

&lt;p&gt;&lt;style&gt;

.background {
  fill: none;
  pointer-events: all;
}

#states {
  fill: #aaa;
}

#states .active {
  fill: orange;
}

#state-borders {
  fill: none;
  stroke: #fff;
  stroke-width: 1.5px;
  stroke-linejoin: round;
  stroke-linecap: round;
  pointer-events: none;
}

&lt;/style&gt;

&lt;script src=&#34;https://d3js.org/d3.v3.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;prova&#34;&gt;
&lt;script&gt;

var maxRadius = 32, 
    padding = 1, 
    margin = {top: -maxRadius, right: -maxRadius, bottom: -maxRadius, left: -maxRadius},
    width = 720 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var k = 1, 
    m = 10, 
    n = 2500, 
    newCircle = bestCircleGenerator(maxRadius, padding);

var svg = d3.select(&#34;#prova&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, 720)
    .attr(&#34;height&#34;, height)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(&#34; + margin.left + &#34;,&#34; + margin.top + &#34;)&#34;);

d3.timer(function() {
  for (var i = 0; i &lt; m &amp;&amp; --n &gt;= 0; ++i) {
    var circle = newCircle(k);

    svg.append(&#34;circle&#34;)
        .attr(&#34;cx&#34;, circle[0])
        .attr(&#34;cy&#34;, circle[1])
        .attr(&#34;r&#34;, 0)
        .style(&#34;fill-opacity&#34;, (Math.random() + .5) / 2)
        .style(&#34;fill&#34;, &#34;#EBBF4C&#34;)
      .transition()
        .attr(&#34;r&#34;, circle[2]);

    
    
    if (k &lt; 500) k *= 1.01, m *= .998;
  }
  return !n;
});

function bestCircleGenerator(maxRadius, padding) {
  var quadtree = d3.geom.quadtree().extent([[0, 0], [width, height]])([]),
      searchRadius = maxRadius * 2,
      maxRadius2 = maxRadius * maxRadius;

  return function(k) {
    var bestX, bestY, bestDistance = 0;

    for (var i = 0; i &lt; k || bestDistance &lt; padding; ++i) {
      var x = Math.random() * width,
          y = Math.random() * height,
          rx1 = x - searchRadius,
          rx2 = x + searchRadius,
          ry1 = y - searchRadius,
          ry2 = y + searchRadius,
          minDistance = maxRadius; 

      quadtree.visit(function(quad, x1, y1, x2, y2) {
        if (p = quad.point) {
          var p,
              dx = x - p[0],
              dy = y - p[1],
              d2 = dx * dx + dy * dy,
              r2 = p[2] * p[2];
          if (d2 &lt; r2) return minDistance = 0, true; 
          var d = Math.sqrt(d2) - p[2];
          if (d &lt; minDistance) minDistance = d;
        }
        return !minDistance || x1 &gt; rx2 || x2 &lt; rx1 || y1 &gt; ry2 || y2 &lt; ry1; 
      });

      if (minDistance &gt; bestDistance) bestX = x, bestY = y, bestDistance = minDistance;
    }

    var best = [bestX, bestY, bestDistance - padding];
    quadtree.add(best);
    return best;
  };
}

&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mitchell‚Äôs best-candidate&lt;/strong&gt; algorithm generates a new random sample by creating k candidate samples and picking the best of k. Here the ‚Äúbest‚Äù sample is defined as the sample that is farthest away from previous samples. The algorithm approximates Poisson-disc sampling, producing a much more natural appearance (better blue noise spectral characteristics) than uniform random sampling.
&lt;p&gt;&lt;/p&gt;
&lt;a href=&#34;https://bl.ocks.org/mbostock/1893974&#34;&gt;Sourcecode here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To embed this script I had to create a shortcodes in the &lt;em&gt;themes/academic/layouts/shortcodes/&lt;/em&gt; folder. The generated svg was wider than the article container so I had to change it in the code.&lt;/p&gt;

&lt;p&gt;At the moment I still have to experiment with Hugo shortcodes in order to automate &lt;em&gt;d3.js&lt;/em&gt; charts embedding in posts, and how to change post width.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo shutdown -h now
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://mickhardins.github.io/talesfromchiba/post/hello-world/</link>
      <pubDate>Fri, 13 Sep 2019 23:52:41 +0200</pubDate>
      <guid>https://mickhardins.github.io/talesfromchiba/post/hello-world/</guid>
      <description>&lt;p&gt;Hello üåç!&lt;/p&gt;

&lt;p&gt;This is my the first blog post, and if things go as planned it won&amp;rsquo;t be the last.&lt;/p&gt;

&lt;p&gt;The whole site is a work-in-progress, at least until I get acquainted with Hugo and the Academic theme.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
